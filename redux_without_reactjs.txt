
  
const {createStore}=  Redux;
const initialState ={
  todos: [],
  posts:[]
}

function myreducer(state= initialState, action){
  console.log(action,state); 
  if(action.type=='ADD_TODO'){
    return{
      
      ...state, //grab everything in the current state
      
      // posts: [],
      
      // todos: state.todos.push 
      // this is wrong as is direct edit the state
      todos: [...state.todos, action.todo]
    }
  }
  if(action.type=='ADD_POST'){
    return{
      
      ...state, 
      posts: [...state.posts, action.post] 
      
    }
  }
}
const store=createStore(myreducer);


    
//subscribe fn fires everytime the state is changed.
store.subscribe(()=>{
  console.log('state updated');
  console.log( store.getState() ); //get current state of store.
})

// const todoAction={ type: 'ADD_TODO', todo: 'buy milk'};
// store.dispatch(todoAction);
store.dispatch( {type: 'ADD_TODO', todo: 'buy milk' });
store.dispatch( {type: 'ADD_TODO', todo: 'sleep'});
store.dispatch( {type: 'ADD_POST', post: 'learn' });





//TO BE SET WHEN USING CODEPEN FOR REDUX (WITHOUT REACT)
//https://cdnjs.cloudflare.com/ajax/libs/redux/4.0.0-rc.1/redux.js
//for redux library
//js preprocessor as Babel 
